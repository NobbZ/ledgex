defmodule Ledgex.Web.Resolver.IdentifyableTest do
  use ExUnit.Case

  import Ledgex.Factory

  alias Ledgex.Web.Resolver.Identifyable
  alias Ledgex.Web.Schema

  describe "resolve/3" do
    :identifyable
    |> Schema.Helper.types_extending()
    |> Enum.each(fn factory ->
      test "returns a #{factory} when given a valid id" do
        data = insert(unquote(factory))

        assert {:ok, ^data} = Identifyable.resolve(%{}, %{id: data.id}, %{})
      end
    end)

    test "returns error when given an invalid id" do
      # This is a random UUIDv1 generated by https://www.uuidgenerator.net/
      # It will probably never clash in the DB, as v1 is not used in this application.
      assert {:error, _} =
               Identifyable.resolve(%{}, %{id: "b190a6a6-21c3-11ee-be56-0242ac120002"}, %{})
    end
  end
end
